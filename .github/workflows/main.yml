name: Build and publish release
on:
  push:
    branches: [main]
    paths:
      - "**.py"
  workflow_dispatch:
permissions: write-all
jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v4
      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install pyinstaller
      - run: pip install -r requirements.txt
      - run: pyinstaller -F --noconsole latex_template_to_vscode_snippet.py-n tex2snip.exe
      - uses: actions/upload-artifact@v3
        with:
          name: tex2snip_windows
          path: .\dist\tex2snip.exe
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v4
      - name: Setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install pyinstaller
      - run: pip install -r requirements.txt
      - run: pyinstaller -F --noconsole latex_template_to_vscode_snippet.py-n tex2snip
      - uses: actions/upload-artifact@v3
        with:
          name: tex2snip_linux
          path: ./dist/tex2snip
  create-release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: ./
      - name: Create github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{github.run_number}}
          release_name: Release Version ${{github.run_number}}
          draft: false
          prerelease: false
      - name: Upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload}}
          asset_path: ./tex2snip_windows/tex2snip.exe
          asset_name: tex2snip_windows.exe
          asset_content_type: application

      - name: Upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload}}
          asset_path: ./tex2snip_linux/tex2snip
          asset_name: tex2snip_linux
          asset_content_type: application
